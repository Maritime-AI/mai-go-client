// Code generated by go-swagger; DO NOT EDIT.

package aiapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Maritime-AI/mai-go-client/models"
)

// PostAdminLoginReader is a Reader for the PostAdminLogin structure.
type PostAdminLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAdminLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAdminLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAdminLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAdminLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAdminLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /admin/login] PostAdminLogin", response, response.Code())
	}
}

// NewPostAdminLoginOK creates a PostAdminLoginOK with default headers values
func NewPostAdminLoginOK() *PostAdminLoginOK {
	return &PostAdminLoginOK{}
}

/*
PostAdminLoginOK describes a response with status code 200, with default header values.

Success
*/
type PostAdminLoginOK struct {
	Payload *models.AuthResponse
}

// IsSuccess returns true when this post admin login o k response has a 2xx status code
func (o *PostAdminLoginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post admin login o k response has a 3xx status code
func (o *PostAdminLoginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post admin login o k response has a 4xx status code
func (o *PostAdminLoginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post admin login o k response has a 5xx status code
func (o *PostAdminLoginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post admin login o k response a status code equal to that given
func (o *PostAdminLoginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post admin login o k response
func (o *PostAdminLoginOK) Code() int {
	return 200
}

func (o *PostAdminLoginOK) Error() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginOK  %+v", 200, o.Payload)
}

func (o *PostAdminLoginOK) String() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginOK  %+v", 200, o.Payload)
}

func (o *PostAdminLoginOK) GetPayload() *models.AuthResponse {
	return o.Payload
}

func (o *PostAdminLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAdminLoginBadRequest creates a PostAdminLoginBadRequest with default headers values
func NewPostAdminLoginBadRequest() *PostAdminLoginBadRequest {
	return &PostAdminLoginBadRequest{}
}

/*
PostAdminLoginBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostAdminLoginBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this post admin login bad request response has a 2xx status code
func (o *PostAdminLoginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post admin login bad request response has a 3xx status code
func (o *PostAdminLoginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post admin login bad request response has a 4xx status code
func (o *PostAdminLoginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post admin login bad request response has a 5xx status code
func (o *PostAdminLoginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post admin login bad request response a status code equal to that given
func (o *PostAdminLoginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post admin login bad request response
func (o *PostAdminLoginBadRequest) Code() int {
	return 400
}

func (o *PostAdminLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginBadRequest  %+v", 400, o.Payload)
}

func (o *PostAdminLoginBadRequest) String() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginBadRequest  %+v", 400, o.Payload)
}

func (o *PostAdminLoginBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostAdminLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAdminLoginUnauthorized creates a PostAdminLoginUnauthorized with default headers values
func NewPostAdminLoginUnauthorized() *PostAdminLoginUnauthorized {
	return &PostAdminLoginUnauthorized{}
}

/*
PostAdminLoginUnauthorized describes a response with status code 401, with default header values.

Not Authorized
*/
type PostAdminLoginUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this post admin login unauthorized response has a 2xx status code
func (o *PostAdminLoginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post admin login unauthorized response has a 3xx status code
func (o *PostAdminLoginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post admin login unauthorized response has a 4xx status code
func (o *PostAdminLoginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post admin login unauthorized response has a 5xx status code
func (o *PostAdminLoginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post admin login unauthorized response a status code equal to that given
func (o *PostAdminLoginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post admin login unauthorized response
func (o *PostAdminLoginUnauthorized) Code() int {
	return 401
}

func (o *PostAdminLoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAdminLoginUnauthorized) String() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAdminLoginUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostAdminLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAdminLoginInternalServerError creates a PostAdminLoginInternalServerError with default headers values
func NewPostAdminLoginInternalServerError() *PostAdminLoginInternalServerError {
	return &PostAdminLoginInternalServerError{}
}

/*
PostAdminLoginInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostAdminLoginInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this post admin login internal server error response has a 2xx status code
func (o *PostAdminLoginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post admin login internal server error response has a 3xx status code
func (o *PostAdminLoginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post admin login internal server error response has a 4xx status code
func (o *PostAdminLoginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post admin login internal server error response has a 5xx status code
func (o *PostAdminLoginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post admin login internal server error response a status code equal to that given
func (o *PostAdminLoginInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post admin login internal server error response
func (o *PostAdminLoginInternalServerError) Code() int {
	return 500
}

func (o *PostAdminLoginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAdminLoginInternalServerError) String() string {
	return fmt.Sprintf("[POST /admin/login][%d] postAdminLoginInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAdminLoginInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostAdminLoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
