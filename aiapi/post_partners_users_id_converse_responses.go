// Code generated by go-swagger; DO NOT EDIT.

package aiapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Maritime-AI/mai-go-client/models"
)

// PostPartnersUsersIDConverseReader is a Reader for the PostPartnersUsersIDConverse structure.
type PostPartnersUsersIDConverseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPartnersUsersIDConverseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPartnersUsersIDConverseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPartnersUsersIDConverseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPartnersUsersIDConverseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPartnersUsersIDConverseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /partners/users/{id}/converse] PostPartnersUsersIDConverse", response, response.Code())
	}
}

// NewPostPartnersUsersIDConverseOK creates a PostPartnersUsersIDConverseOK with default headers values
func NewPostPartnersUsersIDConverseOK() *PostPartnersUsersIDConverseOK {
	return &PostPartnersUsersIDConverseOK{}
}

/*
PostPartnersUsersIDConverseOK describes a response with status code 200, with default header values.

Success
*/
type PostPartnersUsersIDConverseOK struct {
	Payload *models.ChatMessageResponse
}

// IsSuccess returns true when this post partners users Id converse o k response has a 2xx status code
func (o *PostPartnersUsersIDConverseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post partners users Id converse o k response has a 3xx status code
func (o *PostPartnersUsersIDConverseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners users Id converse o k response has a 4xx status code
func (o *PostPartnersUsersIDConverseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post partners users Id converse o k response has a 5xx status code
func (o *PostPartnersUsersIDConverseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post partners users Id converse o k response a status code equal to that given
func (o *PostPartnersUsersIDConverseOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post partners users Id converse o k response
func (o *PostPartnersUsersIDConverseOK) Code() int {
	return 200
}

func (o *PostPartnersUsersIDConverseOK) Error() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseOK  %+v", 200, o.Payload)
}

func (o *PostPartnersUsersIDConverseOK) String() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseOK  %+v", 200, o.Payload)
}

func (o *PostPartnersUsersIDConverseOK) GetPayload() *models.ChatMessageResponse {
	return o.Payload
}

func (o *PostPartnersUsersIDConverseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChatMessageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartnersUsersIDConverseBadRequest creates a PostPartnersUsersIDConverseBadRequest with default headers values
func NewPostPartnersUsersIDConverseBadRequest() *PostPartnersUsersIDConverseBadRequest {
	return &PostPartnersUsersIDConverseBadRequest{}
}

/*
PostPartnersUsersIDConverseBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPartnersUsersIDConverseBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this post partners users Id converse bad request response has a 2xx status code
func (o *PostPartnersUsersIDConverseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post partners users Id converse bad request response has a 3xx status code
func (o *PostPartnersUsersIDConverseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners users Id converse bad request response has a 4xx status code
func (o *PostPartnersUsersIDConverseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post partners users Id converse bad request response has a 5xx status code
func (o *PostPartnersUsersIDConverseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post partners users Id converse bad request response a status code equal to that given
func (o *PostPartnersUsersIDConverseBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post partners users Id converse bad request response
func (o *PostPartnersUsersIDConverseBadRequest) Code() int {
	return 400
}

func (o *PostPartnersUsersIDConverseBadRequest) Error() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseBadRequest  %+v", 400, o.Payload)
}

func (o *PostPartnersUsersIDConverseBadRequest) String() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseBadRequest  %+v", 400, o.Payload)
}

func (o *PostPartnersUsersIDConverseBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPartnersUsersIDConverseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartnersUsersIDConverseUnauthorized creates a PostPartnersUsersIDConverseUnauthorized with default headers values
func NewPostPartnersUsersIDConverseUnauthorized() *PostPartnersUsersIDConverseUnauthorized {
	return &PostPartnersUsersIDConverseUnauthorized{}
}

/*
PostPartnersUsersIDConverseUnauthorized describes a response with status code 401, with default header values.

Not Authorized
*/
type PostPartnersUsersIDConverseUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this post partners users Id converse unauthorized response has a 2xx status code
func (o *PostPartnersUsersIDConverseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post partners users Id converse unauthorized response has a 3xx status code
func (o *PostPartnersUsersIDConverseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners users Id converse unauthorized response has a 4xx status code
func (o *PostPartnersUsersIDConverseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post partners users Id converse unauthorized response has a 5xx status code
func (o *PostPartnersUsersIDConverseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post partners users Id converse unauthorized response a status code equal to that given
func (o *PostPartnersUsersIDConverseUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post partners users Id converse unauthorized response
func (o *PostPartnersUsersIDConverseUnauthorized) Code() int {
	return 401
}

func (o *PostPartnersUsersIDConverseUnauthorized) Error() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPartnersUsersIDConverseUnauthorized) String() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPartnersUsersIDConverseUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPartnersUsersIDConverseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartnersUsersIDConverseInternalServerError creates a PostPartnersUsersIDConverseInternalServerError with default headers values
func NewPostPartnersUsersIDConverseInternalServerError() *PostPartnersUsersIDConverseInternalServerError {
	return &PostPartnersUsersIDConverseInternalServerError{}
}

/*
PostPartnersUsersIDConverseInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostPartnersUsersIDConverseInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this post partners users Id converse internal server error response has a 2xx status code
func (o *PostPartnersUsersIDConverseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post partners users Id converse internal server error response has a 3xx status code
func (o *PostPartnersUsersIDConverseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners users Id converse internal server error response has a 4xx status code
func (o *PostPartnersUsersIDConverseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post partners users Id converse internal server error response has a 5xx status code
func (o *PostPartnersUsersIDConverseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post partners users Id converse internal server error response a status code equal to that given
func (o *PostPartnersUsersIDConverseInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post partners users Id converse internal server error response
func (o *PostPartnersUsersIDConverseInternalServerError) Code() int {
	return 500
}

func (o *PostPartnersUsersIDConverseInternalServerError) Error() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPartnersUsersIDConverseInternalServerError) String() string {
	return fmt.Sprintf("[POST /partners/users/{id}/converse][%d] postPartnersUsersIdConverseInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPartnersUsersIDConverseInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPartnersUsersIDConverseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
