// Code generated by go-swagger; DO NOT EDIT.

package aiapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Maritime-AI/mai-go-client/models"
)

// GetAdminCustomerUploadsReader is a Reader for the GetAdminCustomerUploads structure.
type GetAdminCustomerUploadsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAdminCustomerUploadsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAdminCustomerUploadsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAdminCustomerUploadsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAdminCustomerUploadsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAdminCustomerUploadsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /admin_customer_uploads] GetAdminCustomerUploads", response, response.Code())
	}
}

// NewGetAdminCustomerUploadsOK creates a GetAdminCustomerUploadsOK with default headers values
func NewGetAdminCustomerUploadsOK() *GetAdminCustomerUploadsOK {
	return &GetAdminCustomerUploadsOK{}
}

/*
GetAdminCustomerUploadsOK describes a response with status code 200, with default header values.

Success
*/
type GetAdminCustomerUploadsOK struct {
	Payload []*models.File
}

// IsSuccess returns true when this get admin customer uploads o k response has a 2xx status code
func (o *GetAdminCustomerUploadsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get admin customer uploads o k response has a 3xx status code
func (o *GetAdminCustomerUploadsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get admin customer uploads o k response has a 4xx status code
func (o *GetAdminCustomerUploadsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get admin customer uploads o k response has a 5xx status code
func (o *GetAdminCustomerUploadsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get admin customer uploads o k response a status code equal to that given
func (o *GetAdminCustomerUploadsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get admin customer uploads o k response
func (o *GetAdminCustomerUploadsOK) Code() int {
	return 200
}

func (o *GetAdminCustomerUploadsOK) Error() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsOK  %+v", 200, o.Payload)
}

func (o *GetAdminCustomerUploadsOK) String() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsOK  %+v", 200, o.Payload)
}

func (o *GetAdminCustomerUploadsOK) GetPayload() []*models.File {
	return o.Payload
}

func (o *GetAdminCustomerUploadsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAdminCustomerUploadsBadRequest creates a GetAdminCustomerUploadsBadRequest with default headers values
func NewGetAdminCustomerUploadsBadRequest() *GetAdminCustomerUploadsBadRequest {
	return &GetAdminCustomerUploadsBadRequest{}
}

/*
GetAdminCustomerUploadsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAdminCustomerUploadsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get admin customer uploads bad request response has a 2xx status code
func (o *GetAdminCustomerUploadsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get admin customer uploads bad request response has a 3xx status code
func (o *GetAdminCustomerUploadsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get admin customer uploads bad request response has a 4xx status code
func (o *GetAdminCustomerUploadsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get admin customer uploads bad request response has a 5xx status code
func (o *GetAdminCustomerUploadsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get admin customer uploads bad request response a status code equal to that given
func (o *GetAdminCustomerUploadsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get admin customer uploads bad request response
func (o *GetAdminCustomerUploadsBadRequest) Code() int {
	return 400
}

func (o *GetAdminCustomerUploadsBadRequest) Error() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAdminCustomerUploadsBadRequest) String() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAdminCustomerUploadsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAdminCustomerUploadsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAdminCustomerUploadsUnauthorized creates a GetAdminCustomerUploadsUnauthorized with default headers values
func NewGetAdminCustomerUploadsUnauthorized() *GetAdminCustomerUploadsUnauthorized {
	return &GetAdminCustomerUploadsUnauthorized{}
}

/*
GetAdminCustomerUploadsUnauthorized describes a response with status code 401, with default header values.

Not Authorized
*/
type GetAdminCustomerUploadsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get admin customer uploads unauthorized response has a 2xx status code
func (o *GetAdminCustomerUploadsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get admin customer uploads unauthorized response has a 3xx status code
func (o *GetAdminCustomerUploadsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get admin customer uploads unauthorized response has a 4xx status code
func (o *GetAdminCustomerUploadsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get admin customer uploads unauthorized response has a 5xx status code
func (o *GetAdminCustomerUploadsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get admin customer uploads unauthorized response a status code equal to that given
func (o *GetAdminCustomerUploadsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get admin customer uploads unauthorized response
func (o *GetAdminCustomerUploadsUnauthorized) Code() int {
	return 401
}

func (o *GetAdminCustomerUploadsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAdminCustomerUploadsUnauthorized) String() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAdminCustomerUploadsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAdminCustomerUploadsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAdminCustomerUploadsInternalServerError creates a GetAdminCustomerUploadsInternalServerError with default headers values
func NewGetAdminCustomerUploadsInternalServerError() *GetAdminCustomerUploadsInternalServerError {
	return &GetAdminCustomerUploadsInternalServerError{}
}

/*
GetAdminCustomerUploadsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAdminCustomerUploadsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get admin customer uploads internal server error response has a 2xx status code
func (o *GetAdminCustomerUploadsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get admin customer uploads internal server error response has a 3xx status code
func (o *GetAdminCustomerUploadsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get admin customer uploads internal server error response has a 4xx status code
func (o *GetAdminCustomerUploadsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get admin customer uploads internal server error response has a 5xx status code
func (o *GetAdminCustomerUploadsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get admin customer uploads internal server error response a status code equal to that given
func (o *GetAdminCustomerUploadsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get admin customer uploads internal server error response
func (o *GetAdminCustomerUploadsInternalServerError) Code() int {
	return 500
}

func (o *GetAdminCustomerUploadsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAdminCustomerUploadsInternalServerError) String() string {
	return fmt.Sprintf("[GET /admin_customer_uploads][%d] getAdminCustomerUploadsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAdminCustomerUploadsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAdminCustomerUploadsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
