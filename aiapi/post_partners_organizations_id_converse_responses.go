// Code generated by go-swagger; DO NOT EDIT.

package aiapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Maritime-AI/mai-go-client/models"
)

// PostPartnersOrganizationsIDConverseReader is a Reader for the PostPartnersOrganizationsIDConverse structure.
type PostPartnersOrganizationsIDConverseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPartnersOrganizationsIDConverseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPartnersOrganizationsIDConverseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPartnersOrganizationsIDConverseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPartnersOrganizationsIDConverseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPartnersOrganizationsIDConverseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /partners/organizations/{id}/converse] PostPartnersOrganizationsIDConverse", response, response.Code())
	}
}

// NewPostPartnersOrganizationsIDConverseOK creates a PostPartnersOrganizationsIDConverseOK with default headers values
func NewPostPartnersOrganizationsIDConverseOK() *PostPartnersOrganizationsIDConverseOK {
	return &PostPartnersOrganizationsIDConverseOK{}
}

/*
PostPartnersOrganizationsIDConverseOK describes a response with status code 200, with default header values.

Success
*/
type PostPartnersOrganizationsIDConverseOK struct {
	Payload *models.ChatMessageResponse
}

// IsSuccess returns true when this post partners organizations Id converse o k response has a 2xx status code
func (o *PostPartnersOrganizationsIDConverseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post partners organizations Id converse o k response has a 3xx status code
func (o *PostPartnersOrganizationsIDConverseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners organizations Id converse o k response has a 4xx status code
func (o *PostPartnersOrganizationsIDConverseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post partners organizations Id converse o k response has a 5xx status code
func (o *PostPartnersOrganizationsIDConverseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post partners organizations Id converse o k response a status code equal to that given
func (o *PostPartnersOrganizationsIDConverseOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post partners organizations Id converse o k response
func (o *PostPartnersOrganizationsIDConverseOK) Code() int {
	return 200
}

func (o *PostPartnersOrganizationsIDConverseOK) Error() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseOK  %+v", 200, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseOK) String() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseOK  %+v", 200, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseOK) GetPayload() *models.ChatMessageResponse {
	return o.Payload
}

func (o *PostPartnersOrganizationsIDConverseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChatMessageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartnersOrganizationsIDConverseBadRequest creates a PostPartnersOrganizationsIDConverseBadRequest with default headers values
func NewPostPartnersOrganizationsIDConverseBadRequest() *PostPartnersOrganizationsIDConverseBadRequest {
	return &PostPartnersOrganizationsIDConverseBadRequest{}
}

/*
PostPartnersOrganizationsIDConverseBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPartnersOrganizationsIDConverseBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this post partners organizations Id converse bad request response has a 2xx status code
func (o *PostPartnersOrganizationsIDConverseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post partners organizations Id converse bad request response has a 3xx status code
func (o *PostPartnersOrganizationsIDConverseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners organizations Id converse bad request response has a 4xx status code
func (o *PostPartnersOrganizationsIDConverseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post partners organizations Id converse bad request response has a 5xx status code
func (o *PostPartnersOrganizationsIDConverseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post partners organizations Id converse bad request response a status code equal to that given
func (o *PostPartnersOrganizationsIDConverseBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post partners organizations Id converse bad request response
func (o *PostPartnersOrganizationsIDConverseBadRequest) Code() int {
	return 400
}

func (o *PostPartnersOrganizationsIDConverseBadRequest) Error() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseBadRequest  %+v", 400, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseBadRequest) String() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseBadRequest  %+v", 400, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPartnersOrganizationsIDConverseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartnersOrganizationsIDConverseUnauthorized creates a PostPartnersOrganizationsIDConverseUnauthorized with default headers values
func NewPostPartnersOrganizationsIDConverseUnauthorized() *PostPartnersOrganizationsIDConverseUnauthorized {
	return &PostPartnersOrganizationsIDConverseUnauthorized{}
}

/*
PostPartnersOrganizationsIDConverseUnauthorized describes a response with status code 401, with default header values.

Not Authorized
*/
type PostPartnersOrganizationsIDConverseUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this post partners organizations Id converse unauthorized response has a 2xx status code
func (o *PostPartnersOrganizationsIDConverseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post partners organizations Id converse unauthorized response has a 3xx status code
func (o *PostPartnersOrganizationsIDConverseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners organizations Id converse unauthorized response has a 4xx status code
func (o *PostPartnersOrganizationsIDConverseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post partners organizations Id converse unauthorized response has a 5xx status code
func (o *PostPartnersOrganizationsIDConverseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post partners organizations Id converse unauthorized response a status code equal to that given
func (o *PostPartnersOrganizationsIDConverseUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post partners organizations Id converse unauthorized response
func (o *PostPartnersOrganizationsIDConverseUnauthorized) Code() int {
	return 401
}

func (o *PostPartnersOrganizationsIDConverseUnauthorized) Error() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseUnauthorized) String() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseUnauthorized  %+v", 401, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPartnersOrganizationsIDConverseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPartnersOrganizationsIDConverseInternalServerError creates a PostPartnersOrganizationsIDConverseInternalServerError with default headers values
func NewPostPartnersOrganizationsIDConverseInternalServerError() *PostPartnersOrganizationsIDConverseInternalServerError {
	return &PostPartnersOrganizationsIDConverseInternalServerError{}
}

/*
PostPartnersOrganizationsIDConverseInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostPartnersOrganizationsIDConverseInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this post partners organizations Id converse internal server error response has a 2xx status code
func (o *PostPartnersOrganizationsIDConverseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post partners organizations Id converse internal server error response has a 3xx status code
func (o *PostPartnersOrganizationsIDConverseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post partners organizations Id converse internal server error response has a 4xx status code
func (o *PostPartnersOrganizationsIDConverseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post partners organizations Id converse internal server error response has a 5xx status code
func (o *PostPartnersOrganizationsIDConverseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post partners organizations Id converse internal server error response a status code equal to that given
func (o *PostPartnersOrganizationsIDConverseInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post partners organizations Id converse internal server error response
func (o *PostPartnersOrganizationsIDConverseInternalServerError) Code() int {
	return 500
}

func (o *PostPartnersOrganizationsIDConverseInternalServerError) Error() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseInternalServerError) String() string {
	return fmt.Sprintf("[POST /partners/organizations/{id}/converse][%d] postPartnersOrganizationsIdConverseInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPartnersOrganizationsIDConverseInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPartnersOrganizationsIDConverseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
